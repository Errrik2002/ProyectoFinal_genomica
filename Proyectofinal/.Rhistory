library(readxl)
library(phyloseq)
library(MGnifyR)
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj.RData")
rank_names(psobj1)
plot_bar(psobj1, fill = "Genus")
mgclnt <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache') #esto se conecta a base de dato
#Retrieve the list of analyses associated with a study
accession_list <- mgnify_analyses_from_studies(mgclnt, "MGYS00001373", usecache = T)
#Download all associated study/sample and analysis metadata
meta_dataframe <- mgnify_get_analyses_metadata(mgclnt, accession_list, usecache = T )
#Convert analyses outputs to a single `phyloseq` object
psobj2 <- mgnify_get_analyses_phyloseq(mgclnt, meta_dataframe$analysis_accession, usecache = T)
save(psobj2, file = "04_saved/psobj2.RData")
rank_names(psobj2)
plot_bar(psobj2, fill = "Genus")
psobj2 #lo convierte ya en un objeto phyloseq
rank_names(psobj2)
plot_bar(psobj2, fill = "Species")
plot_bar(psobj2, fill = "Genus")
BiocManager::install("phyloseq")
library(phyloseq)
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj.RData")
#
plot_net(psobj1, type = "taxa", point_label = "Class", point_size = 10, point_alpha = 0.5, maxdist = 0.5, color = "Species", distance = "bray", laymeth = "auto")
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj2.RData")
plot_bar(psobj2, fill = "Genus")
script1 <-read.csv("01_RawData/ed1cvs16.tsv",dec=",",sep="\t")
script1
View(script1)
sobreexp <- subset(script1, script1$logFC <0 | script1$P.Value < 0.05)
subexp <- subset(script1, script1$logFC <0 | script1$P.Value < 0.05)
subexp
rm(sobreexp)
sobreexp <- subset(script1, script1$logFC > 0 | script1$P.Value < 0.05)
sobreexp
top10sub <- sort(subexp$logFC, decreasing = F)[1:10]
top10sub
top10sub <- sort(subexp$logFC, decreasing = T)[1:10]
top10sub
elgensub <- subexp %>% filter_all(any_vars(. %in% c(top10sub)[1:10]))
library(dyplr)
library(dplyr)
elgensub <- subexp %>% filter_all(any_vars(. %in% c(top10sub)[1:10]))
elgensub
top10sob <- sort(sobreexp$logFC, decreasing = F)[1:10]
top10sob
elgensobre <- sobreexp %>% filter_all(any_vars(. %in% c(top10sob)[1:10]))
elgensobre
elgensub
vph18 <-read.csv("01_RawData/ed1cvs18.tsv",dec=",",sep="\t")
View(vph18)
subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
subexp18
top10sub18 <- sort(subexp18$logFC, decreasing = T)[1:10]
top10sub18
elgensub18 <- subexp18 %>% filter_all(any_vars(. %in% c(top10sub18)[1:10]))
elgensub18
sobreexp18 <- subset(vph18, script1$logFC > 0 | script1$P.Value < 0.05)
sobreexp18
top10sob18 <- sort(sobreexp18$logFC, decreasing = F)[1:10]
elgensobre18 <- sobreexp18 %>% filter_all(any_vars(. %in% c(top10sob18)[1:10]))
elgensobre18
elgensobre18
elgensub18
elgensobre18
elgensobre18
elgensub18
elgensub18
elgensub
elgensobre
############################################
####################
###########################
vph16_7522 <-read.csv("01_RawData/GSE151666_positivos_HPV16vsCancernormal.tsv",dec=",",sep="\t")
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_7522, vph16_7522$logFC <0 | vph16_7522$P.Value < 0.05)
sub16exp_7522
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_7522, vph16_7522$logFC <0 | vph16_7522$P.Value < 0.05)
sub16exp_7522
############################################
####################
###########################
vph16_7522 <-read.csv("01_RawData/GSE151666_positivos_HPV16vsCancernormal.tsv",dec=",",sep="\t")
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_7522, vph16_7522$logFC <0 | vph16_7522$P.Value < 0.05)
sub16exp_7522
View(vph16_7522)
vph18_8081 <-read.csv("01_RawData/GSE138081_HPV18vsNormal.tsv",dec=",",sep="\t")
vph16_7522 <-read.csv("01_RawData/GSE67522_HPV16vsControl.tsv",dec=",",sep="\t")
View(vph16_7522)
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_7522, vph16_7522$logFC <0 | vph16_7522$P.Value < 0.05)
sub16exp_7522
top10sub16_7522 <- sort(sub16exp_7522$logFC, decreasing = T)[1:10]
top10sub16_7522 ###########SACAMOS LOS VALORES MAS BAJOS########
library(dplyr)
elgensub16_7522 <- sub16exp_7522 %>% filter_all(any_vars(. %in% c(top10sub16_7522)[1:10]))
elgensub16_7522
sobr16_7522 <- subset(vph16_7522, vph16_7522$logFC > 0 | vph16_7522$P.Value < 0.05)
top10sob16_7522 <- sort(sobr16_7522$logFC, decreasing = T)[1:10]
elgensobre16_7522 <- sobr16_7522 %>% filter_all(any_vars(. %in% c(top10sob16_7522)[1:10]))
elgensobre16_7522
script1 <-read.csv("01_RawData/ed1cvs16.tsv",dec=",",sep="\t")
subexp <- subset(script1, script1$logFC <0 | script1$P.Value < 0.05)
top10sub <- sort(subexp$logFC, decreasing = T)[1:10]
elgensub <- subexp %>% filter_all(any_vars(. %in% c(top10sub)[1:10]))
elgensub
elgensub
sobreexp <- subset(script1, script1$logFC > 0 | script1$P.Value < 0.05)
top10sob <- sort(sobreexp$logFC, decreasing = F)[1:10]
elgensobre <- sobreexp %>% filter_all(any_vars(. %in% c(top10sob)[1:10]))
elgensobre
top10sob <- sort(sobreexp$logFC, decreasing = T)[1:10]
elgensobre <- sobreexp %>% filter_all(any_vars(. %in% c(top10sob)[1:10]))
elgensobre
elgensub
elgensobre
elgensub
vph18 <-read.csv("01_RawData/ed1cvs18.tsv",dec=",",sep="\t")
subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
top10sub18 <- sort(subexp18$logFC, decreasing = F)[1:10]
elgensub18 <- subexp18 %>% filter_all(any_vars(. %in% c(top10sub18)[1:10]))
elgensub18
top10sub18 <- sort(subexp18$logFC, decreasing = T)[1:10]
elgensub18 <- subexp18 %>% filter_all(any_vars(. %in% c(top10sub18)[1:10]))
elgensub18
subexp18 <- subset(vph18, vph18$logFC <0 | vph18$P.Value < 0.05)
top10sub18 <- sort(subexp18$logFC, decreasing = F)[1:10]
elgensub18 <- subexp18 %>% filter_all(any_vars(. %in% c(top10sub18)[1:10]))
elgensub18
top10sub18 <- sort(subexp18$logFC, decreasing = T)[1:10]
elgensub18 <- subexp18 %>% filter_all(any_vars(. %in% c(top10sub18)[1:10]))
elgensub18
elgensub18[1]
sobreexp18 <- subset(vph18, script1$logFC > 0 | script1$P.Value < 0.05)
top10sob18 <- sort(sobreexp18$logFC, decreasing = F)[1:10]
elgensobre18 <- sobreexp18 %>% filter_all(any_vars(. %in% c(top10sob18)[1:10]))
elgensobre18
sobreexp18 <- subset(vph18, vph18$logFC > 0 | vph18$P.Value < 0.05)
top10sob18 <- sort(sobreexp18$logFC, decreasing = T)[1:10]
elgensobre18 <- sobreexp18 %>% filter_all(any_vars(. %in% c(top10sob18)[1:10]))
elgensobre18
elgensobre18[1]
elgensub
elgensub[1]
elgensobre
elgensobre[1]
vph16_7522 <-read.csv("01_RawData/GSE67522_HPV16vsControl.tsv",dec=",",sep="\t")
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_7522, vph16_7522$logFC <0 | vph16_7522$P.Value < 0.05)
sub16exp_7522
top10sub16_7522 <- sort(sub16exp_7522$logFC, decreasing = T)[1:10]
elgensub16_7522 <- sub16exp_7522 %>% filter_all(any_vars(. %in% c(top10sub16_7522)[1:10]))
elgensub16_7522
sobr16_7522 <- subset(vph16_7522, vph16_7522$logFC > 0 | vph16_7522$P.Value < 0.05)
top10sob16_7522 <- sort(sobr16_7522$logFC, decreasing = T)[1:10]
elgensobre16_7522 <- sobr16_7522 %>% filter_all(any_vars(. %in% c(top10sob16_7522)[1:10]))
elgensobre16_7522
############################################
####################
###########################
vph16_7522 <-read.csv("01_RawData/GSE151666_positivos_HPV16vsCancernormal.tsv",dec=",",sep="\t")
vph16_7522 <-read.csv("01_RawData/GSE67522_HPV16vsControl.tsv",dec=",",sep="\t")
############################################
#################### GSE151666 RNA sequencing of pre-treatment primary cervical cancer
###########################
vph16_1666 <-read.csv("01_RawData/GSE151666_positivos_HPV16vsCancernormal.tsv",dec=",",sep="\t")
View(vph16_1666)
############################################
#################### GSE151666 RNA sequencing of pre-treatment primary cervical cancer
###########################
vph16_1666 <-read.csv("01_RawData/GSE151666_VPH16vsCncer_noVPH.tsv",dec=",",sep="\t")
View(vph16_1666)
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_7522 <- subset(vph16_1666, vph16_1666$log2FoldChange <0 | vph16_1666$pvalue < 0.05)
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub16exp_1666 <- subset(vph16_1666, vph16_1666$log2FoldChange <0 | vph16_1666$pvalue < 0.05)
sub16exp_1666
top10sub16_1666 <- sort(sub16exp_1666$log2FoldChange, decreasing = T)[1:10]
top10sub16_1666 ###########SACAMOS LOS VALORES MAS BAJOS########
elgensub16_1666 <- sub16exp_1666 %>% filter_all(any_vars(. %in% c(top10sub16_1666)[1:10]))
elgensub16_1666
sobr16_1666 <- subset(vph16_1666, vph16_1666$log2FoldChange > 0 | vph16_1666$pvalue < 0.05)
sobr16_1666
top10sob16_1666 <- sort(sobr16_1666$log2FoldChange, decreasing = T)[1:10]
top10sob16_1666
elgensobre16_1666 <- sobr16_1666 %>% filter_all(any_vars(. %in% c(top10sob16_1666)[1:10]))
elgensobre16_1666
vph18_1666 <-read.csv("01_RawData/GSE151666_VPH18vsCancernormal.tsv",dec=",",sep="\t")
View(vph18_1666)
#subexp18 <- subset(vph18, script1$logFC <0 | script1$P.Value < 0.05)
sub18exp_1666 <- subset(vph18_1666, vph18_1666$log2FoldChange <0 | vph18_1666$pvalue < 0.05)
sub18exp_1666
top10sub18_1666 <- sort(sub18exp_1666$log2FoldChange, decreasing = T)[1:10]
top10sub18_1666 ###########SACAMOS LOS VALORES MAS BAJOS########
elgensub18_1666 <- sub18exp_1666 %>% filter_all(any_vars(. %in% c(top10sub18_1666)[1:10]))
elgensub18_1666
sobr18_1666 <- subset(vph18_1666, vph18_1666$log2FoldChange > 0 | vph18_1666$pvalue < 0.05)
sobr18_1666
top10sob18_1666 <- sort(sobr18_1666$log2FoldChange, decreasing = T)[1:10]
top10sob18_1666
top10sob18_1666 <- sort(sobr18_1666$log2FoldChange, decreasing = T)[1:10]
elgensobre18_1666 <- sobr18_1666 %>% filter_all(any_vars(. %in% c(top10sob18_1666)[1:10]))
elgensobre18_1666
elgensub16_7522
elgensub16_7522[8]
elgensub16_7522[8:9]
elgensobre16_7522
elgensobre16_7522[8:9]
elgensub16_1666
elgensub16_1666[8:9]
elgensobre16_1666
elgensobre16_1666[8:9]
elgensub18_1666
elgensub18_1666[8:9]
sobr18_1666[8:9]
elgensobre18_1666[8:9]
library (MGnifyR)
library (phyloseq)
View(vph16_1666)
library (phyloseq)
library (MGnifyR)
# cargamos los dstos desde mgnifyR
# comentar esta parte del script
bioma <- mgnify_client(usecache = T, cache_dir = '/tmp/MGnify_cache')
lista_acc <- mgnify_analyses_from_studies(bioma, "MGYS00000943", usecache = T)
meta_dataframe <- mgnify_get_analyses_metadata(bioma, lista_acc, usecache = T )
#save(psobj2, file = "04_saved/psobj2.RData")
load("04_saved/vbioma.RData")
# vamos a explorar las opciones dentro del bioma
vbioma
otu_table (vbioma)
sample_data (vbioma)
sample_variables (vbioma)
tax_table (vbioma)
rank_names (vbioma)
####################################################################
plot_bar(vbioma, fill = "Genus")
df <- psmelt(vbioma)
library(dbplyr)
head(df) %>%
kable(format = "html", col.names = colnames(df)) %>%
kable_styling() %>%
kableExtra::scroll_box(width = "100%", height = "400px")
install.packages(microViz)
install.packages("microViz")
BiocManager::install("microViz")
library(microViz)
vbioma %>%
tax_agg("Genus") %>%
ps_seriate(dist = "bray", method = "OLO_ward") %>% # these are the defaults
comp_barplot(tax_level = "Genus", sample_order = "asis", n_taxa = 10)
vbioma %>%
tax_agg("Genus") %>%
ps_seriate(dist = "bray", method = "OLO_ward") %>% # these are the defaults
barplot(tax_level = "Genus", sample_order = "asis", n_taxa = 10)
library(phyloseq)
vbioma %>%
tax_agg("Genus") %>%
ps_seriate(dist = "bray", method = "OLO_ward") %>% # these are the defaults
barplot(tax_level = "Genus", sample_order = "asis", n_taxa = 10)
data(vbioma)
par(mar = c(10, 4, 4, 2) + 0.1) # make more room on bottom margin
N <- 30
barplot(sort(taxa_sums(vbioma), TRUE)[1:N]/nsamples(vbioma), las=2)
sample_variables (vbioma)
sample_data (vbioma)
otu_table (vbioma)
tax_table (vbioma)
rank_names (vbioma)
tax_table (vbioma)
gpac <- subset_taxa(vbioma, Phylum=="Staphylococcus")
gpac <- subset_taxa(vbioma, Genus=="Staphylococcus")
(p <- plot_heatmap(gpac, "NMDS", "bray", "SampleType", "Family"))
(p <- plot_heatmap(vbioma, "NMDS", "bray", "SampleType", "Family"))
p <- plot_heatmap(vbioma, "NMDS", "bray", "SampleType", "Family")
library(ggplot2)
plot_bar(vbioma, fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack")
plot_bar(vbioma, fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus), stat="identity", position="stack")
plot_bar(vbioma, fill = "Genus") +
geom_bar(aes(color=Genus, fill=Genus))
plot_heatmap(vbioma, method = "NMDS", distance = "bray")
vbioma_filtrado <- filter_taxa(vbioma, function(x) sum(x > total*0.20) > 0, TRUE)
total = median(sample_sums(vbioma))
vbioma_filtrado <- filter_taxa(vbioma, function(x) sum(x > total*0.20) > 0, TRUE)
vbioma_filtrado
plot_heatmap(vbioma_filtrado, method = "NMDS", distance = "bray")
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Class", taxa.order = "Class",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Class",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Specie", taxa.order = "Class",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Specie", taxa.order = "Class",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
tax_table (vbioma)
rank_names (vbioma)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Species", taxa.order = "Class",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Species", taxa.order = "Species",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Species",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
rank_names (vbioma)
tax_table (vbioma)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Species", taxa.order = "Species",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
plot_heatmap(vbioma_filtrado, method = "MDS", distance = "Bray",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
sample_data (vbioma)
sample_data (vbioma)
View(sample_data (vbioma))
otu_table (vbioma)
View(sample_data (vbioma))
sample_variables (vbioma)
View(sample_variables (vbioma))
tax_table (vbioma)
rank_names (vbioma)
# Arranging by decreasing Bacteroides abundance
vbioma %>%
tax_agg("Genus") %>%
ps_arrange(desc(Bacteroides), .target = "otu_table") %>%
otu_get()
# Arranging by decreasing Bacteroides abundance
vbioma %>%
tax_agg("Genus") %>%
ps_arrange(desc(Bacteroides), .target = "otu_table") %>%
otu_get()
########################
install.packages(
"microViz",
repos = c(davidbarnett = "https://david-barnett.r-universe.dev", getOption("repos"))
)
########################
BiocManager::install(c("microbiome", "ComplexHeatmap"), update = FALSE)
library(microbiome)
library(microViz)
library(ComplexHeatmap)
# Arranging by decreasing Bacteroides abundance
vbioma %>%
tax_agg("Genus") %>%
ps_arrange(desc(Bacteroides), .target = "otu_table") %>%
otu_get()
# Arranging by decreasing Bacteroides abundance
vbioma %>%
tax_agg("Genus") %>%
ps_arrange(desc(Lactobaciullus), .target = "otu_table") %>%
otu_get()
# Arranging by decreasing Bacteroides abundance
vbioma %>% tax_fix()
vbioma %>%
tax_agg("Genus") %>%
ps_arrange(desc(Lactobaciullus), .target = "otu_table") %>%
otu_get()
# Arranging by decreasing Bacteroides abundance
vbioma %>% tax_fix(vbioma)
# Arranging by decreasing Bacteroides abundance
vbiomafixed <- vbioma %>% tax_fix()
vbiomafixed %>%
tax_agg("Genus") %>%
ps_arrange(desc(Lactobaciullus), .target = "otu_table") %>%
otu_get()
vbiomafixed %>%
tax_agg("Genus") %>%
ps_arrange(desc(Lactobacillus), .target = "otu_table") %>%
otu_get()
vbiomafixed %>%
tax_agg("Genus") %>%
ps_arrange(.target = "otu_table") %>%
otu_get()
View(vbiomafixed %>%
tax_agg("Genus") %>%
ps_arrange(.target = "otu_table") %>%
otu_get() )
View(vbiomafixed %>%
tax_agg("Species") %>%
ps_arrange(.target = "otu_table") %>%
otu_get() )
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj.RData")
#################analisis de frecuencia##############
total1168 = median(sample_sums(ps.options(psobj1)))
#################analisis de frecuencia##############
total1168 = median(sample_sums(psobj1))
ps1168filtrado <- filter_taxa(psobj1, function(x) sum(x > total1168*0.20) > 0, TRUE)
plot_heatmap(ps1168filtrado, method = "NMDS", distance = "bray")
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Species",
trans=NULL)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
ps1168filtrado <- filter_taxa(psobj1, function(x) sum(x > total1168*0.30) > 0, TRUE)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
ps1168filtrado <- filter_taxa(psobj1, function(x) sum(x > total1168*0.50) > 0, TRUE)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
ps1168filtrado <- filter_taxa(psobj1, function(x) sum(x > total1168*0.40) > 0, TRUE)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
rank_names(psobj1)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Species",
trans=NULL)
sample_names(psobj1)
sample_variables(psobj1)
psobj1fixed <- psobj1 %>% tax_fix()
View(psobj1fixed %>%
tax_agg("Species") %>%
ps_arrange(.target = "otu_table") %>%
otu_get() )
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Species", taxa.order = "Species",
trans=NULL)
ps1168filtrado <- filter_taxa(psobj1, function(x) sum(x > total1168*0.20) > 0, TRUE)
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Species", taxa.order = "Species",
trans=NULL)
tax_table (vbioma)
tax_table(psobj1)
View(tax_table(psobj1))
taxastablas <- tax_table(psobj1)
taxastablas["vaginae"]
plot_heatmap(ps1168filtrado, method = "MDS", distance = "(A+B-2*J)/(A+B-J)",
taxa.label = "Genus", taxa.order = "Genus",
trans=NULL)
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj2.RData")
plot_bar(psobj2, fill = "Genus")
#################analisis de frecuencia##############
total1373 = median(sample_sums(psobj2))
ps1373filtrado <- filter_taxa(psobj2, function(x) sum(x > total13`*0.20) > 0, TRUE)
ps1373filtrado <- filter_taxa(psobj2, function(x) sum(x > total138*0.20) > 0, TRUE)
ps1373filtrado
#################analisis de frecuencia##############
total1373 = median(sample_sums(psobj2))
#save(taxa,file="04_Processed_Data/taxa.RData")
load("04_saved/psobj2.RData")
ps1373filtrado
